// Mocks generated by Mockito 5.4.6 from annotations
// in pro_video_editor/test/pro_video_editor_method_channel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:typed_data' as _i5;
import 'dart:ui' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:pro_video_editor/core/models/thumbnail/thumbnail_box_fit.model.dart'
    as _i10;
import 'package:pro_video_editor/core/models/thumbnail/thumbnail_format.model.dart'
    as _i9;
import 'package:pro_video_editor/core/models/video/editor_video_model.dart'
    as _i2;
import 'package:pro_video_editor/core/platform/io/io_helper.dart' as _i7;
import 'package:pro_video_editor/pro_video_editor.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEditorVideo_0 extends _i1.SmartFake implements _i2.EditorVideo {
  _FakeEditorVideo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSize_1 extends _i1.SmartFake implements _i3.Size {
  _FakeSize_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRenderVideoModel_2 extends _i1.SmartFake
    implements _i4.RenderVideoModel {
  _FakeRenderVideoModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EditorVideo].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditorVideo extends _i1.Mock implements _i2.EditorVideo {
  MockEditorVideo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasBytes => (super.noSuchMethod(
        Invocation.getter(#hasBytes),
        returnValue: false,
      ) as bool);

  @override
  bool get hasNetworkUrl => (super.noSuchMethod(
        Invocation.getter(#hasNetworkUrl),
        returnValue: false,
      ) as bool);

  @override
  bool get hasFile => (super.noSuchMethod(
        Invocation.getter(#hasFile),
        returnValue: false,
      ) as bool);

  @override
  bool get hasAssetPath => (super.noSuchMethod(
        Invocation.getter(#hasAssetPath),
        returnValue: false,
      ) as bool);

  @override
  _i2.EditorVideoType get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: _i2.EditorVideoType.file,
      ) as _i2.EditorVideoType);

  @override
  set byteArray(_i5.Uint8List? _byteArray) => super.noSuchMethod(
        Invocation.setter(
          #byteArray,
          _byteArray,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i5.Uint8List> safeByteArray() => (super.noSuchMethod(
        Invocation.method(
          #safeByteArray,
          [],
        ),
        returnValue: _i6.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
      ) as _i6.Future<_i5.Uint8List>);

  @override
  _i2.EditorVideo copyWith({
    _i5.Uint8List? byteArray,
    _i7.File? file,
    String? networkUrl,
    String? assetPath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #byteArray: byteArray,
            #file: file,
            #networkUrl: networkUrl,
            #assetPath: assetPath,
          },
        ),
        returnValue: _FakeEditorVideo_0(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #byteArray: byteArray,
              #file: file,
              #networkUrl: networkUrl,
              #assetPath: assetPath,
            },
          ),
        ),
      ) as _i2.EditorVideo);
}

/// A class which mocks [ThumbnailConfigs].
///
/// See the documentation for Mockito's code generation for more information.
class MockThumbnailConfigs extends _i1.Mock implements _i4.ThumbnailConfigs {
  MockThumbnailConfigs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Duration> get timestamps => (super.noSuchMethod(
        Invocation.getter(#timestamps),
        returnValue: <Duration>[],
      ) as List<Duration>);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i2.EditorVideo get video => (super.noSuchMethod(
        Invocation.getter(#video),
        returnValue: _FakeEditorVideo_0(
          this,
          Invocation.getter(#video),
        ),
      ) as _i2.EditorVideo);

  @override
  _i3.Size get outputSize => (super.noSuchMethod(
        Invocation.getter(#outputSize),
        returnValue: _FakeSize_1(
          this,
          Invocation.getter(#outputSize),
        ),
      ) as _i3.Size);

  @override
  _i9.ThumbnailFormat get outputFormat => (super.noSuchMethod(
        Invocation.getter(#outputFormat),
        returnValue: _i9.ThumbnailFormat.jpeg,
      ) as _i9.ThumbnailFormat);

  @override
  _i10.ThumbnailBoxFit get boxFit => (super.noSuchMethod(
        Invocation.getter(#boxFit),
        returnValue: _i10.ThumbnailBoxFit.cover,
      ) as _i10.ThumbnailBoxFit);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [KeyFramesConfigs].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeyFramesConfigs extends _i1.Mock implements _i4.KeyFramesConfigs {
  MockKeyFramesConfigs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get maxOutputFrames => (super.noSuchMethod(
        Invocation.getter(#maxOutputFrames),
        returnValue: 0,
      ) as int);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i2.EditorVideo get video => (super.noSuchMethod(
        Invocation.getter(#video),
        returnValue: _FakeEditorVideo_0(
          this,
          Invocation.getter(#video),
        ),
      ) as _i2.EditorVideo);

  @override
  _i3.Size get outputSize => (super.noSuchMethod(
        Invocation.getter(#outputSize),
        returnValue: _FakeSize_1(
          this,
          Invocation.getter(#outputSize),
        ),
      ) as _i3.Size);

  @override
  _i9.ThumbnailFormat get outputFormat => (super.noSuchMethod(
        Invocation.getter(#outputFormat),
        returnValue: _i9.ThumbnailFormat.jpeg,
      ) as _i9.ThumbnailFormat);

  @override
  _i10.ThumbnailBoxFit get boxFit => (super.noSuchMethod(
        Invocation.getter(#boxFit),
        returnValue: _i10.ThumbnailBoxFit.cover,
      ) as _i10.ThumbnailBoxFit);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [RenderVideoModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockRenderVideoModel extends _i1.Mock implements _i4.RenderVideoModel {
  MockRenderVideoModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i4.VideoOutputFormat get outputFormat => (super.noSuchMethod(
        Invocation.getter(#outputFormat),
        returnValue: _i4.VideoOutputFormat.mp4,
      ) as _i4.VideoOutputFormat);

  @override
  _i2.EditorVideo get video => (super.noSuchMethod(
        Invocation.getter(#video),
        returnValue: _FakeEditorVideo_0(
          this,
          Invocation.getter(#video),
        ),
      ) as _i2.EditorVideo);

  @override
  bool get enableAudio => (super.noSuchMethod(
        Invocation.getter(#enableAudio),
        returnValue: false,
      ) as bool);

  @override
  List<List<double>> get colorMatrixList => (super.noSuchMethod(
        Invocation.getter(#colorMatrixList),
        returnValue: <List<double>>[],
      ) as List<List<double>>);

  @override
  _i6.Stream<_i4.ProgressModel> get progressStream => (super.noSuchMethod(
        Invocation.getter(#progressStream),
        returnValue: _i6.Stream<_i4.ProgressModel>.empty(),
      ) as _i6.Stream<_i4.ProgressModel>);

  @override
  _i6.Future<Map<String, dynamic>> toAsyncMap() => (super.noSuchMethod(
        Invocation.method(
          #toAsyncMap,
          [],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i4.RenderVideoModel copyWith({
    String? id,
    _i4.VideoOutputFormat? outputFormat,
    _i2.EditorVideo? video,
    _i5.Uint8List? imageBytes,
    _i4.ExportTransform? transform,
    bool? enableAudio,
    double? playbackSpeed,
    Duration? startTime,
    Duration? endTime,
    List<List<double>>? colorMatrixList,
    double? blur,
    int? bitrate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #outputFormat: outputFormat,
            #video: video,
            #imageBytes: imageBytes,
            #transform: transform,
            #enableAudio: enableAudio,
            #playbackSpeed: playbackSpeed,
            #startTime: startTime,
            #endTime: endTime,
            #colorMatrixList: colorMatrixList,
            #blur: blur,
            #bitrate: bitrate,
          },
        ),
        returnValue: _FakeRenderVideoModel_2(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #outputFormat: outputFormat,
              #video: video,
              #imageBytes: imageBytes,
              #transform: transform,
              #enableAudio: enableAudio,
              #playbackSpeed: playbackSpeed,
              #startTime: startTime,
              #endTime: endTime,
              #colorMatrixList: colorMatrixList,
              #blur: blur,
              #bitrate: bitrate,
            },
          ),
        ),
      ) as _i4.RenderVideoModel);
}
